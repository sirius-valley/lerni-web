name: Deploy to S3

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linter
        run: npm run lint
        
      - name: Run tests (if available)
        run: |
          if npm run | grep -q "test"; then
            npm run test -- --coverage --watchAll=false
          else
            echo "No test script found, skipping tests"
          fi
        
      - name: Build application
        run: npm run build
        env:
          # Add any environment variables needed for build
          CI: false
          GENERATE_SOURCEMAP: false
          REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Deploy to S3
        run: |
          aws s3 sync build/ s3://${{ secrets.S3_BUCKET_NAME }} --delete --cache-control max-age=31536000,public
          
      - name: Invalidate CloudFront (optional)
        run: |
          if [ ! -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
          else
            echo "No CloudFront distribution ID provided, skipping invalidation"
          fi
          
      - name: Deployment success notification
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üì¶ Files deployed to S3 bucket: ${{ secrets.S3_BUCKET_NAME }}"
          echo "üåê Application should be available at your S3/CloudFront URL" 